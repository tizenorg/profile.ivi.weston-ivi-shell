<?xml version="1.0" encoding="UTF-8"?>
<protocol name="ivi_application">

    <copyright>
    Copyright (C) 2013 DENSO CORPORATION
    Copyright (c) 2013 BMW Car IT GmbH

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.
    </copyright>

    <interface name="ivi_surface" version="1">
        <description summary="application interface to surface in ivi compositor"/>

        <request name="destroy" type="destructor">
            <description summary="destroy ivi_surface">
                This removes link from surface_id to wl_surface and destroys ivi_surface.
            </description>
        </request>

        <event name="visibility">
            <description summary="visibility of surface in ivi compositor has changed">
                The new visibility state is provided in argument visibility.
                If visibility is 0, the surface has become invisible.
                If visibility is not 0, the surface has become visible.
            </description>
            <arg name="visibility" type="int"/>
        </event>

        <enum name="warning_code">
            <description summary="possible warning codes returned by ivi compositor">
                These warning codes define all possible warning codes returned by ivi compositor
                on server-side warnings.
                invalid_wl_surface: invalid wl_surface is set. This happens if wl_surface is destroyed before this.
                surface_id_in_use: surface_id is already assigned by another application.
            </description>
            <entry name="invalid_wl_surface" value="1" summary="wl_surface is invalid"/>
            <entry name="surface_id_in_use" value="2" summary="surface_id is in use and can not be shared"/>
        </enum>

        <event name="warning">
            <description summary="server-side warning detected">
                The ivi compositor encountered warning while processing a request by this
                application. The warning is defined by argument warning_code and optional
                warning_text. If the warning is detected, client shall destroy the ivi_surface
                object.

                When ivi compositor encounters warnings, a request is canceled and there is no
                mapping from id_surface/wl_surface to this ivi_surface. Even if there is no
                mapping but destroying this ivi_surface is recommended.
            </description>
            <arg name="warning_code" type="int"/>
            <arg name="warning_text" type="string" allow-null="true"/>
        </event>

    </interface>

    <interface name="ivi_application" version="1">
        <description summary="interface for ivi applications to use ivi compositor features"/>

        <request name="surface_create">
            <description summary="create ivi_surface with numeric ID in ivi compositor">
                surface_create will create a interface:ivi_surface with numeric ID; surface_id in
                ivi compositor. These surface_ids are defined as unique in the system to identify
                it inside of ivi compositor. The ivi compositor implements business logic how to
                set properties of the surface with surface_id according to status of the system.
                E.g. a unique ID for Car Navigation application is used for implementing special
                logic of the application about where it shall be located.

                Created ivi_surface notifies warnings when following situation happens,
                - Invalid wl_surface is set. This happen if wl_surface is destroy before this.
                - surface_id is already assigned by another application.
                If a client sets a wl_surface to multiple id_surfaces, no warning is issued. Property
                of the surface can be controlled by multiple ivi_surface. However this case shall
                be avoided by a client.
            </description>
            <arg name="id_surface" type="uint"/>
            <arg name="surface" type="object" interface="wl_surface"/>
            <arg name="id" type="new_id" interface="ivi_surface"/>
        </request>

        <event name="wl_shell_info">
            <arg name="pid" type="int"/>
            <arg name="title" type="string" allow-null="true"/>
        </event>

    </interface>

</protocol>
